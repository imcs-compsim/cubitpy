on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:
    type: choice

jobs:
  code_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install cubitpy
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Code checks
        run: |
          pre-commit install --install-hooks
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            SKIP=no-commit-to-branch pre-commit run --all-files
          else
            pre-commit run --all-files
          fi

  testing:
    name: cubitpy-testing
    runs-on: ubuntu-latest
    env:
      TESTING_GITHUB: 1
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Setup cubit and run tests
        run: |
          whoami
          pwd
          wget -q https://f002.backblazeb2.com/file/cubit-downloads/Coreform-Cubit/Releases/Linux/Coreform-Cubit-2025.3%2B58709-Lin64.tar.gz
          tar -xzf *.tar.gz
          export CUBIT_ROOT="$(pwd)/Coreform-Cubit-2025.3"
          # Update pip
          pip install --upgrade pip
          # Install cubitpy
          pip install -e .[dev]
          # Print information on the python environment
          python --version
          pip list
          # Activate cubit
          $CUBIT_ROOT/bin/rlm_acstivate --login $CUBIT_EMAIL $CUBIT_PASSWORD
          # Run tests
          pytest
          # This tests that if cubit is completely closed everything works
          cd tests
          ./test_configurations.sh
        env:
          CUBIT_EMAIL: ${{ secrets.CUBIT_EMAIL }}
          CUBIT_PASSWORD: ${{ secrets.CUBIT_PASSWORD }}

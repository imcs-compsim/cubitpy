on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:
    type: choice

jobs:
  testing:
    name: cubitpy-testing
    runs-on: self-hosted
    env:
      CUBIT_ROOT: /imcs/public/compsim/opt/cubit-15.2
      PYTHON_VENV: python-testing-environment
      SPACK_ACTIVATION_SCRIPT: /home_local/github-runner/testing_lib/spack/share/spack/setup-env.sh
      TESTING_GITHUB: 1
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup virtual environment and run tests
        run: |
          whoami
          pwd
          export CUBITPY_PATH="$(pwd)"
          # Activate spack and load python
          . ${SPACK_ACTIVATION_SCRIPT}
          spack load python@3.12.1
          # Create the virtual environment
          python -m venv $PYTHON_VENV
          source $PYTHON_VENV/bin/activate
          # Update pip
          pip install --upgrade pip
          # Install cubitpy
          pip install .[dev]
          # Print information on the python environment
          python --version
          pip list
          # Run code checks
          pre-commit install --install-hooks
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            SKIP=no-commit-to-branch pre-commit run --all-files
          else
            pre-commit run --all-files
          fi
          # Run tests
          cd tests
          coverage run --rcfile=coverage.config -m pytest *.py
          coverage html
          coverage report
          coverage-badge -o htmlcov/coverage.svg
          # This tests that if cubit is completely closed everything works
          ./test_configurations.sh

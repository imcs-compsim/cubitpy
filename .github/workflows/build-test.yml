name: CubitPy testing

on:
  push:
    branches: [main]
  pull_request_target:
  workflow_dispatch:

jobs:
  code_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install cubitpy
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Code checks
        run: |
          pre-commit install --install-hooks
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            SKIP=no-commit-to-branch pre-commit run --all-files
          else
            pre-commit run --all-files
          fi

  testing:
    name: cubitpy-testing
    runs-on: ubuntu-latest
    env:
      TESTING_GITHUB: 1
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Setup Coreform Cubit
        run: |
          # We need these packages for cubit to work
          sudo apt update
          sudo apt install -y libglu1-mesa
          # Download cubit and extract it
          wget -q https://f002.backblazeb2.com/file/cubit-downloads/Coreform-Cubit/Releases/Linux/Coreform-Cubit-2025.3%2B58709-Lin64.tar.gz
          tar -xzf *.tar.gz
          # Save cubit root path
          CUBIT_FOLDER=$(find . -maxdepth 1 -type d -name "Coreform-Cubit-*" | head -n 1 | sed 's|^\./||')
          export CUBIT_ROOT="$(pwd)/$CUBIT_FOLDER"
          echo "CUBIT_ROOT=$CUBIT_ROOT" >> "$GITHUB_ENV"
          # Check if secrets are available
          if [[ -z "$CUBIT_PASSWORD" ]]; then
            echo "CUBIT_PASSWORD is empty or not injected"
            exit 1
          fi
          # Activate cubit
          $CUBIT_ROOT/bin/rlm_activate --login $CUBIT_EMAIL $CUBIT_PASSWORD
        env:
          CUBIT_EMAIL: ${{ secrets.CUBIT_EMAIL }}
          CUBIT_PASSWORD: ${{ secrets.CUBIT_PASSWORD }}
      - name: Install CubitPy
        run: |
          pip install --upgrade pip
          pip install -e .[dev]
          python --version
          pip list
      - name: Run test suite
        run: pytest
      - name: Run deletion tests
        run: |
          cd tests
          ./test_configurations.sh
